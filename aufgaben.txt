Code im Anhang oder auf https://github.com/B0mM3L6000/CI


##########################################################

Aufgabe 1 (bruteforce_tsp.py):

Die kürzeste Tour ist 2275 lang und geht durch folgende Städte:

['Kiel', 'Hamburg', 'Mainz', 'Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Berlin', 'Potsdam', 'Schwerin']

Es dauerte 12 Sekunden diese zu berechnen mit Bruteforce und 10! Touren wurden betrachtet.

Für 16 Städte müssen 16! Touren betrachtet werden und daher wird es ca um den Faktor 16!/10! länger dauern. Dies entspricht ca. 69189120 Sekunden also 800 Tage oder mehr als 2 Jahre.


#########################################################

Aufgabe 2 (2opt.py):


Für 10 Städte:

1 Millionen Iterationen in 11 Sekunden

Run 1:
Best tour: ['Potsdam', 'Schwerin', 'Kiel', 'Hamburg', 'Mainz', 'Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Berlin'] length: 2275.0
nach 319 Iterationen

Run 2:
Best tour: ['Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Berlin', 'Potsdam', 'Schwerin', 'Kiel', 'Hamburg', 'Mainz'] length: 2275.0
nach 94 Iterationen

Run 3:
Best tour: ['Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Berlin', 'Potsdam', 'Schwerin', 'Kiel', 'Hamburg', 'Mainz'] length: 2275.0
nach 128 Iterationen

Run 4:
Best tour: ['Mainz', 'Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Berlin', 'Potsdam', 'Schwerin', 'Kiel', 'Hamburg'] length: 2275.0
nach 42 Iterationen

Run 5:
Best tour: ['Dresden', 'Berlin', 'Potsdam', 'Schwerin', 'Kiel', 'Hamburg', 'Mainz', 'Saarbruecken', 'Stuttgart', 'Muenchen'] length: 2275.0
nach 46 Iterationen



Für 16 Städte:

Run 1:
Best tour: ['Duesseldorf', 'Hannover', 'Bremen', 'Hamburg', 'Kiel', 'Schwerin', 'Magdeburg', 'Potsdam', 'Berlin', 'Dresden', 'Erfurt', 'Muenchen', 'Stuttgart', 'Saarbruecken', 'Mainz', 'Wiesbaden'] length: 2794.0  in 13 Sekunden und eine Millionen Iterationen (Tour gefunden nach 276 Iteration)

Run 2:
Best tour: ['Duesseldorf', 'Hannover', 'Bremen', 'Hamburg', 'Kiel', 'Schwerin', 'Magdeburg', 'Potsdam', 'Berlin', 'Dresden', 'Erfurt', 'Muenchen', 'Stuttgart', 'Saarbruecken', 'Mainz', 'Wiesbaden'] length: 2794.0 in 13 Sekunden und eine Millionen Iteration (Tour gefunden nach 353 Iteration)

Run 3:
Best tour: ['Magdeburg', 'Potsdam', 'Berlin', 'Dresden', 'Erfurt', 'Muenchen', 'Stuttgart', 'Saarbruecken', 'Mainz', 'Wiesbaden', 'Duesseldorf', 'Hannover', 'Bremen', 'Hamburg', 'Kiel', 'Schwerin'] length: 2794.0 in 13 Sekunden und eine Millionen Iteration (Tour gefunden nach 582 Iteration)

Run 4:
Best tour: ['Saarbruecken', 'Stuttgart', 'Muenchen', 'Dresden', 'Erfurt', 'Hannover', 'Magdeburg', 'Potsdam', 'Berlin', 'Schwerin', 'Kiel', 'Hamburg', 'Bremen', 'Duesseldorf', 'Wiesbaden', 'Mainz'] length: 2926.0 in 13 Sekunden und eine Millionen Iteration (Tour gefunden nach 433 Iterationen)

Run 5: 
Best tour: ['Schwerin', 'Magdeburg', 'Potsdam', 'Berlin', 'Dresden', 'Erfurt', 'Muenchen', 'Stuttgart', 'Saarbruecken', 'Mainz', 'Wiesbaden', 'Duesseldorf', 'Hannover', 'Bremen', 'Hamburg', 'Kiel'] length: 2794.0 in 13 Sekunden und eine Millionen Iterationen (Tour gefunden nach 955 Iterationen)





=> Für 10 Städte fand 2opt immer die beste Lösung und auch erheblich schneller als Bruteforce

=> Für 16 Städte fand 2opt 4mal eine Länge von 2794 und einmal 2926 (im Mittel also 2820,4)  und zwar fast so schnell wie Bruteforce für 10 Städte brauchte. 



#################################################################

Aufgabe 3 (SA.py):


Hyperparameter:
 - Episoden: 1 Millionen
 - Starttemperatur: 1
 - Endtemperatur: 0

Coolingschema:
 
    - Schema 1:   newtemperature = starttemperatur - t*(starttemperatur-endtemperature)/maxepisodes
    - Schema 2:   newtemperature = starttemperatur*((endtemperature/starttemperatur)**(t/maxepisodes))
    - Schema 3:   newtemperature = starttemperatur * (2.718 ** ((-1)*(1/(maxepisodes**2))*math.log(starttemperatur/endtemperature)*(t**2)))
 

Für 10 Städte:

Coolingschema 1:
Routenlaenge: 2275.0 Zeit: 20.954009771347046 Sekunden
Routenlaenge: 2275.0 Zeit: 21.099207162857056 Sekunden
Routenlaenge: 2275.0 Zeit: 21.385725736618042 Sekunden
Routenlaenge: 2275.0 Zeit: 21.07268500328064 Sekunden
Routenlaenge: 2275.0 Zeit: 21.314931631088257 Sekunden
Mittelwert Laenge: 2275.0 Mittelwert Zeit: 21.16531186103821 Beste Tourenlaenge: 2275.0
Coolingschema 2:
Routenlaenge: 2275.0 Zeit: 21.896210432052612 Sekunden
Routenlaenge: 2275.0 Zeit: 21.67549777030945 Sekunden
Routenlaenge: 2275.0 Zeit: 21.215673446655273 Sekunden
Routenlaenge: 2275.0 Zeit: 21.030713319778442 Sekunden
Routenlaenge: 2275.0 Zeit: 21.03573513031006 Sekunden
Mittelwert Laenge: 2275.0 Mittelwert Zeit: 21.37076601982117 Beste Tourenlaenge: 2275.0
Coolingschema 3:
Routenlaenge: 2275.0 Zeit: 21.078577756881714 Sekunden
Routenlaenge: 2275.0 Zeit: 20.972203254699707 Sekunden
Routenlaenge: 2275.0 Zeit: 20.95048761367798 Sekunden
Routenlaenge: 2275.0 Zeit: 21.04699468612671 Sekunden
Routenlaenge: 2275.0 Zeit: 21.156643390655518 Sekunden
Mittelwert Laenge: 2275.0 Mittelwert Zeit: 21.040981340408326 Beste Tourenlaenge: 2275.0




Für 16 Städte:
    
Coolingschema 1:
Routenlaenge: 2947.0 Zeit: 26.261371612548828 Sekunden
Routenlaenge: 2794.0 Zeit: 26.81058430671692 Sekunden
Routenlaenge: 2794.0 Zeit: 26.321378707885742 Sekunden
Routenlaenge: 2794.0 Zeit: 26.221474647521973 Sekunden
Routenlaenge: 2794.0 Zeit: 26.29929828643799 Sekunden
Mittelwert Laenge: 2824.6 Mittelwert Zeit: 26.38282151222229 Beste Tourenlaenge: 2947.0
Coolingschema 2:
Routenlaenge: 2794.0 Zeit: 25.805976390838623 Sekunden
Routenlaenge: 2794.0 Zeit: 26.671555757522583 Sekunden
Routenlaenge: 2794.0 Zeit: 26.129806995391846 Sekunden
Routenlaenge: 2794.0 Zeit: 25.726290941238403 Sekunden
Routenlaenge: 2794.0 Zeit: 25.90587878227234 Sekunden
Mittelwert Laenge: 2794.0 Mittelwert Zeit: 26.047901773452757 Beste Tourenlaenge: 2794.0
Coolingschema 3:
Routenlaenge: 2794.0 Zeit: 26.514080047607422 Sekunden
Routenlaenge: 2794.0 Zeit: 26.546436309814453 Sekunden
Routenlaenge: 2794.0 Zeit: 26.820090532302856 Sekunden
Routenlaenge: 2794.0 Zeit: 26.18350386619568 Sekunden
Routenlaenge: 2794.0 Zeit: 26.300477504730225 Sekunden
Mittelwert Laenge: 2794.0 Mittelwert Zeit: 26.47291765213013 Beste Tourenlaenge: 2794.0




Für 10 Städte fand meine SA Implentierung immer die beste Tour, war allerdings langsamer als mein Bruteforce, obwohl er weniger Touren inspiziert hat (1 Mil. statt 3,62 Mil). 
Für 16 Städte war SA Brutforce allerdings klar überlegen, da es in kurzer Zeit jedesmal auf die beste oder fast beste Lösung kam. Gegenüber 2opt war es zwar langsamer (doppelte Dauer), aber dafür auch genauer.
Beim SA wurden für 16 Städte in meiner Implementierung immer 1 Millionen Touren begutachtet, was erheblich weniger ist gegenüber den 16! Touren von Bruteforce.



